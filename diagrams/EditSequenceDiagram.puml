@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":EditCommandParser" as EditCommandParser LOGIC_COLOR
participant "e:EditCommand" as EditCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("edit i/T0000000A \nn/Jonathan Tan")
'edit the name from John Doe to Jonathan Tan
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("edit i/T0000000A \nn/Jonathan Tan")
activate AddressBookParser

create EditCommandParser
AddressBookParser -> EditCommandParser
activate EditCommandParser

EditCommandParser --> AddressBookParser
deactivate EditCommandParser

AddressBookParser -> EditCommandParser : parse("i/T0000000A \nn/Jonathan Tan")
activate EditCommandParser

EditCommandParser -> EditCommandParser : createEditPatientDescriptor
activate EditCommandParser

create EditCommand
EditCommandParser -> EditCommand
activate EditCommand

EditCommand --> EditCommandParser : e
deactivate EditCommand

EditCommandParser --> AddressBookParser : e
deactivate EditCommandParser
'Hidden arrow to position the destroy-marker below the end of the activation bar.
EditCommandParser -[hidden]-> AddressBookParser
destroy EditCommandParser

AddressBookParser --> LogicManager : e
deactivate AddressBookParser

LogicManager -> EditCommand : execute()
activate EditCommand

EditCommand -> Model : getPatient(new IcNumber("T0000000A"), \nList<Patient> patientList)
EditCommand -> EditCommand : createEditedPatient
'edited patient object being Jonathan Tan in this case
Model -> Model : setPatient(John Doe, \nJonathan Tan, \neditCommand)
'setPatient contains target patient, edited patient, and command
activate Model

Model --> EditCommand
deactivate Model

create CommandResult
EditCommand -> CommandResult
activate CommandResult

CommandResult --> EditCommand
deactivate CommandResult

EditCommand --> LogicManager : result
deactivate EditCommand

[<--LogicManager
deactivate LogicManager
@enduml
